2nd set of 10 questions. again please code them in all possible ways. write with test stub. write at least 20 to 30 test cases for each program. write login only in function. call by reference should be used mostly as you will practise that more. dont use global variables and avoid writing with library functions. some of you are writing output check also in logic function. you shouldnt do that. you should always lets logic function return values and then checker function does checking
1. Given a string as input,remove all spaces that are in the given string. example "abcd efgh p q r " shoudl be converted as "abcdefghpqr". dont allocate new string. same string should be converted to the above form.
2. given a string include space between all characters. only space should be there between every character. before first character and after last character of the string there shoudlnt be any spaces. "abcd efgh" should be converted as "a b c d e f g h". space given in input should be removed.
3. given a two dimensional matrix as input, write program to compute the transpose of the matrix. input array shoudl be allocated dynamically, not statically as "int a [3]4[]"
4. given a string reverse the words of the string. example: input "matt is a teacher" should be converted as "teacher a is matt". remember same string shoudl be changed. no extra array should be allocated
5. given a string as input, see whether the words of the string are palindrome or not. example: "god is god" returns true. "god is great" is not a palindrome of words
6. given a two dimensional array, print the array on the console using '-'s and '|'s so that the output is displayed as a box. this is purely print based function so no test stubs needed
7. Given a string which has an expression like "a = 1234 + bcd + 23 * p - 234" find the maximum number in the string and the token (or variable) with maximum characters. for the given example 1234 is the maximum number and bcd is the maximum char variable
8. given a string write a function (you will write test stubs and main too) to find the number of occurrences of each word in that string. "ram is playing. he is playing for last 2 hours. ram likes playing".
9. given an array which is not sorted, write a search function. given a number write a function (with test stubs and main too :-)) to find the number in the array
10. given a two dimensional character array and a word, check whether the word is present in the array as a continuous word row wise or column wise and diagonally downside (not upside). rowwise also left to right, column wise top to down. word cant be in two rows or columns it has to be in single row or column